{"version":3,"file":"component---src-templates-articles-template-tsx-c1a1cd4fc4cc9381647d.js","mappings":"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","sources":["webpack://0xfe.dev/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://0xfe.dev/./src/components/Navigation/Navigation.Paginator.tsx","webpack://0xfe.dev/./src/sections/articles/Articles.Hero.tsx","webpack://0xfe.dev/./src/templates/articles.template.tsx"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/react\";\nimport { Link } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport mediaqueries from \"@styles/media\";\nimport { range } from \"@utils\";\n\nimport { IPaginator } from \"@types\";\nimport languages from \"../../data/languages\";\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n  count = this.props.pageCount;\n  current = this.props.index;\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const current = this.current;\n    const count = this.count;\n    const maxPages = this.maxPages;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(\n        pagesRange.length - 1 - maxPages,\n        0,\n        pagesRange[0] - 1\n      );\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden={true} />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      )\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    const normalizedPageRoots = languages.langs.map((lang) =>\n      lang.default ? \"/\" : `/${lang.path}/`\n    );\n    if (normalizedPageRoots.includes(this.pageRoot)) {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"page/\" + n;\n    } else {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"/page/\" + n;\n    }\n  };\n\n  render() {\n    const count = this.count;\n    const current = this.current;\n\n    if (count <= 1) return null;\n\n    const previousPath = this.previousPath;\n    const nextPath = this.nextPath;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n\nconst paginationItemMixin = (p) => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: \"...\";\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${(p) => p.theme.colors.primary};\n\n  em {\n    font-style: normal;\n    color: ${(p) => p.theme.colors.primary};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  // ${mediaqueries.tablet`\n  //   .Paginator__pageLink, ${Spacer} { display: none; }\n  //   left: -15px;\n  // `}\n\n  // ${mediaqueries.desktop_up`\n  //   justify-content: flex-start;\n  //   ${MobileReference} { display: none; }\n  // `}\n`;\n","import React, { useContext } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport Bio from \"@components/Bio\";\nimport Icons from \"@icons\";\nimport mediaqueries from \"@styles/media\";\nimport { IAuthor } from \"@types\";\n\nimport { GridLayoutContext } from \"./Articles.List.Context\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArticlesHero: React.FC<IAuthor> = ({ authors }) => {\n  const {\n    gridLayout = \"tiles\",\n    hasSetGridLayout,\n    setGridLayout,\n  } = useContext(GridLayoutContext);\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === \"tiles\";\n  // const featuredAuthor = authors.find((author) => author.featured);\n\n  // if (!featuredAuthor) {\n  //   throw new Error(`\n  //     No featured Author found.\n  //     Please ensure you have at least featured Author.\n  // `);\n  // }\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} />\n        {/* <FormattedMessage id=\"testKey\" /> */}\n      </HeadingContainer>\n      <SubheadingContainer>\n        {/* <Bio author={featuredAuthor} /> */}\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout(\"tiles\")}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout(\"rows\")}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nexport default ArticlesHero;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${(p) => p.theme.colors.primary};\n\n  a {\n    color: ${(p) => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${(p) => p.theme.colors.hover};\n  }\n\n  &[data-a11y=\"true\"]:focus::after {\n    content: \"\";\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${(p) => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${(p) => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${(p) => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { IntlProvider } from \"react-intl\";\nimport Section from \"../components/Section\";\nimport SEO from \"../components/SEO\";\nimport Paginator from \"../components/Navigation/Navigation.Paginator\";\n\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\nimport ArticlesList from \"../sections/articles/Articles.List\";\n\nimport Layout from \"../components/Layout\";\nimport { Template } from \"../types\";\n\nconst ArticlesPage: Template = ({ location, pageContext, ...otherProps }) => {\n  console.log(\"ArticlesPage\", { otherProps, pageContext, location });\n\n  const articles = pageContext.group;\n  const authors = pageContext.additionalContext.authors;\n  const pathPrefix = pageContext.pathPrefix;\n\n  return (\n    <IntlProvider\n      locale={pageContext.locale}\n      defaultLocale={pageContext.locale}\n      messages={{ testKey: \"testValue\" }}\n    >\n      <Layout location={location}>\n        <SEO pathname={location.pathname} />\n        <ArticlesHero authors={authors} />\n        <Section narrow>\n          <ArticlesList articles={articles} pathPrefix={pathPrefix} />\n          <ArticlesPaginator show={pageContext.pageCount > 1}>\n            <Paginator {...pageContext} />\n          </ArticlesPaginator>\n        </Section>\n        <ArticlesGradient />\n      </Layout>\n    </IntlProvider>\n  );\n};\n\nexport default ArticlesPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${(p) => p.theme.colors.gradient};\n  transition: ${(p) => p.theme.colorModeTransition};\n`;\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${(p) => p.show && `margin-top: 95px;`}\n`;\n"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Paginator","maxPages","count","_this","pageCount","current","index","pageRoot","pathPrefix","getFullPath","n","languages","lang","default","path","includes","Constructor","protoProps","staticProps","render","this","previousPath","nextPath","hasNext","hasPrevious","___EmotionJSX","Helmet","rel","href","Frame","PageButton","to","getPageLinks","MobileReference","previousPage","pagesRange","range","truncatedRange","slice","unshift","splice","push","_toConsumableArray","Set","map","page","Spacer","PageNumberBUtton","_this2","style","opacity","className","prototype","Component","paginationItemMixin","p","css","theme","colors","primary","mediaqueries","_templateObject","Link","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","useStaticQuery","site","edges","node","siteMetadata","tilesIsActive","Section","relative","id","HeadingContainer","maxWidth","HeroHeading","dangerouslySetInnerHTML","__html","heading","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","title","Icons","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","accent","_templateObject7","_templateObject8","hover","location","pageContext","otherProps","console","log","articles","group","additionalContext","IntlProvider","locale","defaultLocale","messages","testKey","Layout","SEO","pathname","ArticlesHero","narrow","ArticlesList","ArticlesPaginator","show","ArticlesGradient","gradient","colorModeTransition"],"sourceRoot":""}